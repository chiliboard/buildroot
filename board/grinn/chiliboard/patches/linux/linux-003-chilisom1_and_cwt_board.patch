From e1367f5ec3484433c85792177d2ecc2336b506ac Mon Sep 17 00:00:00 2001
From: Wojciech Nizinski <w.nizinski@grinn-global.com>
Date: Thu, 1 Oct 2015 11:41:54 +0200
Subject: [PATCH] initial support for Grinn's Chilisom 1.1 and CWT board

---
 arch/arm/boot/dts/am335x-chilisom-gcs1.dtsi     | 272 ++++++++++++++++++++++++
 arch/arm/boot/dts/am335x-chilisom-mii.dtsi      |  90 ++++++++
 arch/arm/boot/dts/am335x-cwt-nand256-ram128.dts | 137 ++++++++++++
 3 files changed, 499 insertions(+)
 create mode 100644 arch/arm/boot/dts/am335x-chilisom-gcs1.dtsi
 create mode 100644 arch/arm/boot/dts/am335x-chilisom-mii.dtsi
 create mode 100644 arch/arm/boot/dts/am335x-cwt-nand256-ram128.dts

diff --git a/arch/arm/boot/dts/am335x-chilisom-gcs1.dtsi b/arch/arm/boot/dts/am335x-chilisom-gcs1.dtsi
new file mode 100644
index 0000000..d0cb6d3
--- /dev/null
+++ b/arch/arm/boot/dts/am335x-chilisom-gcs1.dtsi
@@ -0,0 +1,272 @@
+/*
+ * Copyright (C) 2015 Grinn - http://www.grinn-global.com
+ * Wojciech Nizinski <w.nizinski@grinn-global.com> 
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+/ {
+	model = "Grinn AM335x ChiliSOM GCS1";
+	compatible = "grinn,am335x-chilisom-gcs1", "ti,am33xx";
+
+	cpus {
+		cpu@0 {
+			cpu0-supply = <&dcdc2_reg>;
+		};
+	};
+
+	memory {
+		device_type = "memory";
+		reg = <0x80000000 0x08000000>; /* 128 MB */
+	};
+};
+
+&am33xx_pinmux {
+	pinctrl-names = "default";
+
+	i2c0_pins: pinmux_i2c0_pins {
+		pinctrl-single,pins = <
+			0x188 (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda */
+			0x18c (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl */
+		>;
+	};
+
+	uart0_pins: pinmux_uart0_pins {
+		pinctrl-single,pins = <
+			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
+			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
+		>;
+	};
+
+	nandflash_pins_default: nandflash_pins_default {
+		pinctrl-single,pins = <
+			0x0 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad0.gpmc_ad0 */
+			0x4 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad1.gpmc_ad1 */
+			0x8 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad2.gpmc_ad2 */
+			0xc (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad3.gpmc_ad3 */
+			0x10 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad4.gpmc_ad4 */
+			0x14 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad5.gpmc_ad5 */
+			0x18 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad6.gpmc_ad6 */
+			0x1c (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad7.gpmc_ad7 */
+			0x70 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_wait0.gpmc_wait0 */
+			0x7c (PIN_OUTPUT | MUX_MODE0)		/* gpmc_csn0.gpmc_csn0 */
+			0x90 (PIN_OUTPUT | MUX_MODE0)		/* gpmc_advn_ale.gpmc_advn_ale */
+			0x94 (PIN_OUTPUT | MUX_MODE0)		/* gpmc_oen_ren.gpmc_oen_ren */
+			0x98 (PIN_OUTPUT | MUX_MODE0)		/* gpmc_wen.gpmc_wen */
+			0x9c (PIN_OUTPUT | MUX_MODE0)		/* gpmc_be0n_cle.gpmc_be0n_cle */
+		>;
+	};
+
+	nandflash_pins_sleep: nandflash_pins_sleep {
+		pinctrl-single,pins = <
+			0x0 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x4 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x8 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0xc (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x10 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x14 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x18 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x1c (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x70 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x7c (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x90 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x94 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x98 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+			0x9c (PIN_INPUT_PULLDOWN | MUX_MODE7)
+		>;
+	};
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_pins>;
+	status = "okay";
+};
+
+&i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c0_pins>;
+	status = "okay";
+	clock-frequency = <400000>;
+
+	/* Set OPP50 (0.95V) for VDD core */
+	sleep-sequence = /bits/ 8 <
+		0x02 0x24 0x0b 0x6d /* Password unlock 1 */
+		0x02 0x24 0x10 0x02 /* Set DCDC3 to 0.95V */
+		0x02 0x24 0x0b 0x6d /* Password unlock 2 */
+		0x02 0x24 0x10 0x02 /* Set DCDC3 to 0.95V */
+		0x02 0x24 0x0b 0x6c /* Password unlock 1 */
+		0x02 0x24 0x11 0x86 /* Apply DCDC changes */
+		0x02 0x24 0x0b 0x6c /* Password unlock 2 */
+		0x02 0x24 0x11 0x86 /* Apply DCDC changes */
+	>;
+
+	/* Set OPP100 (1.10V) for VDD core */
+	wake-sequence = /bits/ 8 <
+		0x02 0x24 0x0b 0x6d /* Password unlock 1 */
+		0x02 0x24 0x10 0x08 /* Set DCDC3 to 1.1V */
+		0x02 0x24 0x0b 0x6d /* Password unlock 2 */
+		0x02 0x24 0x10 0x08 /* Set DCDC3 to 1.1V */
+		0x02 0x24 0x0b 0x6c /* Password unlock 1 */
+		0x02 0x24 0x11 0x86 /* Apply DCDC changes */
+		0x02 0x24 0x0b 0x6c /* Password unlock 2 */
+		0x02 0x24 0x11 0x86 /* Apply DCDC changes */
+	>;
+
+	tps: tps@24 {
+		reg = <0x24>;
+	};
+};
+
+&elm {
+	status = "okay";
+};
+
+&gpmc {
+	/* NAND 256MB */
+	status = "okay";
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&nandflash_pins_default>;
+	pinctrl-1 = <&nandflash_pins_sleep>;
+	ranges = <0 0 0x08000000 0x10000000>;	/* CS0: NAND */
+	nand@0,0 {
+		reg = <0 0 0>; /* CS0, offset 0 */
+		nand-bus-width = <8>;
+		gpmc,device-width = <1>;
+		gpmc,sync-clk-ps = <0>;
+		gpmc,cs-on-ns = <0>;
+		gpmc,cs-rd-off-ns = <44>;
+		gpmc,cs-wr-off-ns = <44>;
+		gpmc,adv-on-ns = <6>;
+		gpmc,adv-rd-off-ns = <34>;
+		gpmc,adv-wr-off-ns = <44>;
+		gpmc,we-on-ns = <0>;
+		gpmc,we-off-ns = <40>;
+		gpmc,oe-on-ns = <0>;
+		gpmc,oe-off-ns = <54>;
+		gpmc,access-ns = <64>;
+		gpmc,rd-cycle-ns = <82>;
+		gpmc,wr-cycle-ns = <82>;
+		gpmc,wait-on-read = "true";
+		gpmc,wait-on-write = "true";
+		gpmc,bus-turnaround-ns = <0>;
+		gpmc,cycle2cycle-delay-ns = <0>;
+		gpmc,clk-activation-ns = <0>;
+		gpmc,wait-monitoring-ns = <0>;
+		gpmc,wr-access-ns = <40>;
+		gpmc,wr-data-mux-bus-ns = <0>;
+		ti,nand-ecc-opt= "bch8";
+		ti,elm-id = <&elm>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		partition@0 {
+			label = "NAND.SPL";
+			reg = <0x00000000 0x00020000>;
+		};
+		partition@1 {
+			label = "NAND.SPL.backup1";
+			reg = <0x00020000 0x00020000>;
+		};
+		partition@2 {
+			label = "NAND.SPL.backup2";
+			reg = <0x00040000 0x00020000>;
+		};
+		partition@3 {
+			label = "NAND.SPL.backup3";
+			reg = <0x00060000 0x00020000>;
+		};
+		partition@4 {
+			label = "NAND.u-boot";
+			reg = <0x00080000 0x001C0000>;
+		};
+		partition@5 {
+			label = "NAND.u-boot-spl-os";
+			reg = <0x00240000 0x00020000>;
+		};
+		partition@6 {
+			label = "NAND.u-boot-env";
+			reg = <0x00260000 0x00020000>;
+		};
+		partition@7 {
+			label = "NAND.kernel";
+			reg = <0x00280000 0x00500000>;
+		};
+		partition@8 {
+			label = "NAND.file-system";
+			reg = <0x00780000 0x0F880000>;
+		};
+	};
+};
+
+#include "tps65217.dtsi"
+
+&tps {
+	ti,pmic-shutdown-controller;
+
+	interrupt-parent = <&intc>;
+	interrupts = <7>; /* NNMI */
+
+	regulators {
+		dcdc1_reg: regulator@0 {
+			regulator-always-on;
+		};
+
+		dcdc2_reg: regulator@1 {
+			/* VDD_MPU voltage limits 0.95V - 1.325V with +/-4% tolerance */
+			regulator-name = "vdd_mpu";
+			regulator-min-microvolt = <925000>;
+			regulator-max-microvolt = <1378000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		dcdc3_reg: regulator@2 {
+			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
+			regulator-name = "vdd_core";
+			regulator-min-microvolt = <925000>;
+			regulator-max-microvolt = <1150000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		ldo1_reg: regulator@3 {
+			regulator-always-on;
+		};
+
+		ldo2_reg: regulator@4 {
+			regulator-always-on;
+		};
+
+		ldo3_reg: regulator@5 {
+			regulator-always-on;
+		};
+
+		ldo4_reg: regulator@6 {
+			regulator-always-on;
+		};
+	};
+};
+
+/ {
+	ocp {
+		rtc@44e3e000 {
+			ti,system-power-controller;
+		};
+	};
+};
+
+&wkup_m3 {
+	ti,scale-data-fw = "am335x-bone-scale-data.bin";
+};
+
+&aes {
+	status = "okay";
+};
+
+&sham {
+	status = "okay";
+};
+
+
diff --git a/arch/arm/boot/dts/am335x-chilisom-mii.dtsi b/arch/arm/boot/dts/am335x-chilisom-mii.dtsi
new file mode 100644
index 0000000..c20b2f9
--- /dev/null
+++ b/arch/arm/boot/dts/am335x-chilisom-mii.dtsi
@@ -0,0 +1,90 @@
+/*
+ * Copyright (C) 2015 Grinn - http://www.grinn-global.com
+ * Wojciech Nizinski <w.nizinski@grinn-global.com> 
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+ 
+&am33xx_pinmux {
+        cpsw_default: cpsw_default {
+        pinctrl-single,pins = <
+                0x108 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (H16) gmii1_col.gmii1_col */
+                0x10c ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (H17) gmii1_crs.gmii1_crs */
+                0x110 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (J15) gmii1_rxer.gmii1_rxer */
+                0x114 ( PIN_OUTPUT         | MUX_MODE0 ) /* (J16) gmii1_txen.gmii1_txen */
+                0x118 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (J17) gmii1_rxdv.gmii1_rxdv */
+                0x12c ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (K18) gmii1_txclk.gmii1_txclk */
+                0x130 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (L18) gmii1_rxclk.gmii1_rxclk */
+                0x128 ( PIN_OUTPUT         | MUX_MODE0 ) /* (K17) gmii1_txd0.gmii1_txd0 */
+                0x124 ( PIN_OUTPUT         | MUX_MODE0 ) /* (K16) gmii1_txd1.gmii1_txd1 */
+                0x120 ( PIN_OUTPUT         | MUX_MODE0 ) /* (K15) gmii1_txd2.gmii1_txd2 */
+                0x11c ( PIN_OUTPUT         | MUX_MODE0 ) /* (J18) gmii1_txd3.gmii1_txd3 */
+                0x140 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (M16) gmii1_rxd0.gmii1_rxd0 */
+                0x13c ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (L15) gmii1_rxd1.gmii1_rxd1 */
+                0x138 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (L16) gmii1_rxd2.gmii1_rxd2 */
+                0x134 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (L17) gmii1_rxd3.gmii1_rxd3 */
+        		>;
+        };
+                
+        cpsw_sleep: cpsw_sleep {
+        pinctrl-single,pins = <
+                0x108 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (H16) gmii1_col.gmii1_col */
+                0x10c (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (H17) gmii1_crs.gmii1_crs */
+                0x110 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (J15) gmii1_rxer.gmii1_rxer */
+                0x114 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (J16) gmii1_txen.gmii1_txen */
+                0x118 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (J17) gmii1_rxdv.gmii1_rxdv */
+                0x12c (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (K18) gmii1_txclk.gmii1_txclk */
+                0x130 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (L18) gmii1_rxclk.gmii1_rxclk */
+                0x128 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (K17) gmii1_txd0.gmii1_txd0 */
+                0x124 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (K16) gmii1_txd1.gmii1_txd1 */
+                0x120 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (K15) gmii1_txd2.gmii1_txd2 */
+                0x11c (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (J18) gmii1_txd3.gmii1_txd3 */
+                0x140 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (M16) gmii1_rxd0.gmii1_rxd0 */
+                0x13c (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (L15) gmii1_rxd1.gmii1_rxd1 */
+                0x138 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (L16) gmii1_rxd2.gmii1_rxd2 */
+                0x134 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* (L17) gmii1_rxd3.gmii1_rxd3 */
+        		>;
+		};
+
+        davinci_mdio_default: davinci_mdio_default {
+                pinctrl-single,pins = <
+                        /* MDIO */
+                        0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)    /* mdio_data.mdio_data */
+                        0x14c (PIN_OUTPUT_PULLUP | MUX_MODE0)                   /* mdio_clk.mdio_clk */
+                >;
+        };
+
+       davinci_mdio_sleep: davinci_mdio_sleep {
+                pinctrl-single,pins = <
+                        /* MDIO reset value */
+                        0x148 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x14c (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                >;
+        };
+}; /* &am33xx_pinmux */
+
+&cpsw_emac0 {
+	phy_id = <&davinci_mdio>, <0>;
+    phy-mode = "mii";
+};
+
+&cpsw_emac1 {
+	phy_id = <&davinci_mdio>, <1>;
+	phy-mode = "mii";
+};
+
+&mac {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&cpsw_default>;
+	pinctrl-1 = <&cpsw_sleep>;
+};
+
+&davinci_mdio {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&davinci_mdio_default>;
+	pinctrl-1 = <&davinci_mdio_sleep>;
+};
+
+
diff --git a/arch/arm/boot/dts/am335x-cwt-nand256-ram128.dts b/arch/arm/boot/dts/am335x-cwt-nand256-ram128.dts
new file mode 100644
index 0000000..48258dd
--- /dev/null
+++ b/arch/arm/boot/dts/am335x-cwt-nand256-ram128.dts
@@ -0,0 +1,137 @@
+/*
+ * Copyright (C) 2015 Grinn - http://www.grinn-global.com
+ * Wojciech Nizinski <w.nizinski@grinn-global.com> 
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+ 
+/dts-v1/;
+
+#include "am33xx.dtsi"
+#include "am335x-chilisom-gcs1.dtsi"
+//#include "am335x-chiliboard-common.dtsi"
+//#include "am335x-chiliboard-all-gpio.dtsi"
+
+
+&am33xx_pinmux {
+        pinctrl-names = "default";
+	// bone:
+        mmc1_pins_default: pinmux_mmc1_pins {
+                pinctrl-single,pins = <
+                        0x0F0 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat3.mmc0_dat3 */
+                        0x0F4 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat2.mmc0_dat2 */
+                        0x0F8 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat1.mmc0_dat1 */
+                        0x0FC (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat0.mmc0_dat0 */
+                        0x100 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_clk.mmc0_clk */
+                        0x104 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_cmd.mmc0_cmd */
+                        0x1A0 (PIN_INPUT_PULLUP | MUX_MODE7)    /* mcasp0_aclkr.gpio3_18 */
+                        0x160 (PIN_INPUT | MUX_MODE7)           /* spi0_cs1.gpio0_6 */
+                >;
+        };
+
+        mmc1_pins_sleep: pinmux_mmc1_pins_sleep {
+                pinctrl-single,pins = <
+                        0x0F0 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x0F4 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x0F8 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x0FC (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x100 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x104 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                        0x1A0 (PIN_INPUT_PULLDOWN | MUX_MODE7)
+                >;
+        };
+};
+
+// bone:
+&mmc1 {
+        status = "okay";
+        vmmc-supply = <&ldo3_reg>;
+        bus-width = <4>;
+        pinctrl-names = "default";
+        pinctrl-0 = <&mmc1_pins_default>;
+        cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
+        cd-inverted;
+};
+
+// bone:
+&ldo3_reg {
+        regulator-min-microvolt = <1800000>;
+        regulator-max-microvolt = <3300000>;
+        regulator-always-on;
+};
+
+&mmc1 {
+        vmmc-supply = <&ldo3_reg>;
+};
+
+
+/*******************************************************
+ * 2 USB Ports in Host mode
+ ******************************************************/
+&usb {
+	status = "okay";
+};
+
+&usb_ctrl_mod {
+	status = "okay";
+};
+
+&usb0_phy {
+	status = "okay";
+};
+
+&usb0 {
+	status = "okay";
+	dr_mode = "host";
+};
+
+&usb1_phy {
+	status = "okay";
+};
+
+&usb1 {
+	status = "okay";
+	dr_mode = "host";
+};
+
+&cppi41dma  {
+        status = "okay";
+};
+
+/*******************************************************
+ * Select MII mode of Ethernet 
+ ******************************************************/
+#include "am335x-chilisom-mii.dtsi"
+
+/* on CWT board PHY is DP8384 and it is on addres 1 not 0 */
+&cpsw_emac0 {
+	phy_id = <&davinci_mdio>, <1>;
+    phy-mode = "mii";
+};
+
+/*******************************************************
+ * Additional peripherials from CWT board
+ *******************************************************/
+&i2c0 {
+
+        eeprom: 24c01@50 {
+                compatible = "at,24c01";
+                pagesize = <32>;
+                reg = <0x50>;
+                status = "okay";
+        };
+};
+
+
+&mmc1 {
+        status = "okay";
+        vmmc-supply = <&ldo3_reg>;
+        bus-width = <4>;
+        pinctrl-names = "default";
+        pinctrl-0 = <&mmc1_pins_default>;
+        cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
+        cd-inverted;
+};
+  
\ No newline at end of file
-- 
2.1.4

